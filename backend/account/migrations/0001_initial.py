# Generated by Django 4.1.4 on 2023-04-21 16:18

import config.helpers
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='email')),
                ('first_name', models.CharField(blank=True, help_text='Name contains only a-z and A-Z characters', max_length=150, validators=[django.core.validators.RegexValidator(message='Name contains only a-z and A-Z characters', regex="[a-zA-Z\\s']+")], verbose_name='first name')),
                ('last_name', models.CharField(blank=True, help_text='Name contains only a-z and A-Z characters', max_length=150, validators=[django.core.validators.RegexValidator(message='Name contains only a-z and A-Z characters', regex="[a-zA-Z\\s']+")], verbose_name='last name')),
                ('username', models.CharField(blank=True, help_text='Name contains only a-z and A-Z characters', max_length=150, validators=[django.core.validators.RegexValidator(message='Name contains only a-z and A-Z characters', regex="[a-zA-Z\\s']+")], verbose_name='username')),
                ('phone', models.CharField(blank=True, help_text='Phone number must be in this format:994xxxxxxxxx', max_length=12, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in this format:994xxxxxxxxx', regex='994\\s?\\d{2}[2-9]\\d{6}')], verbose_name='phone')),
                ('registration_number', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True, verbose_name='registration number')),
                ('is_admin', models.BooleanField(default=False, help_text='Designates whether the user is admin or not.', verbose_name='admin status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_superadmin', models.BooleanField(default=False, help_text='Designates whether the user is admin or not.', verbose_name='superadmin')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now_add=True, verbose_name='last login')),
                ('password_updated_date', models.DateTimeField(auto_now_add=True, verbose_name='password updated date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'account',
                'verbose_name_plural': 'accounts',
                'ordering': ['first_name', 'last_name', 'username'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, upload_to=config.helpers.get_profile_photo_upload_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])], verbose_name='profile picture')),
                ('website_links', models.URLField(default='', verbose_name='website links')),
                ('city', models.CharField(max_length=20, verbose_name='city')),
                ('state', models.CharField(max_length=20, verbose_name='state')),
                ('country', models.CharField(max_length=20, verbose_name='country')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='account')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
    ]
